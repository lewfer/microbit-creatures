<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id=")YJ])yFN?zd%bnj]pTqd" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="hE-i,4gHPx/ube|K~hzH" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace creatures {" line1="    export function setNewPosition (frontback: string, side: string, joint: string, position: string) {" line2="    let newPositions: number[] = []" line3="    multiplier = 1" line4="    if (side == &quot;left&quot;) {" line5="        multiplier = 1" line6="    } else {" line7="        multiplier = -1" line8="    }" line9="    if (position == &quot;forward&quot;) {" line10="        _newAngle = HIPFORWARD" line11="    } else if (position == &quot;backward&quot;) {" line12="        _newAngle = HIPBACKWARD" line13="    } else if (position == &quot;up&quot;) {" line14="        _newAngle = KNEEUP" line15="    } else if (position == &quot;down&quot;) {" line16="        _newAngle = KNEEDOWN" line17="    } else {" line18="        _newAngle = 90" line19="    }" line20="    _newAngle = 90 + _newAngle * multiplier" line21="    _idx = getIndex(frontback, side, joint)" line22="    newPositions[_idx] = _newAngle" line23="    serial.writeLine(&quot;&quot; + _idx + &quot;,&quot; + _newAngle)" line24="}" line25="function getIndex (frontback: string, side: string, joint: string) {" line26="    if (frontback == &quot;front&quot;) {" line27="        if (side == &quot;left&quot;) {" line28="            if (joint == &quot;hip&quot;) {" line29="                _idx = 1" line30="            } else {" line31="                _idx = 2" line32="            }" line33="        } else {" line34="            if (joint == &quot;hip&quot;) {" line35="                _idx = 3" line36="            } else {" line37="                _idx = 4" line38="            }" line39="        }" line40="    } else {" line41="        if (side == &quot;left&quot;) {" line42="            if (joint == &quot;hip&quot;) {" line43="                _idx = 5" line44="            } else {" line45="                _idx = 6" line46="            }" line47="        } else {" line48="            if (joint == &quot;hip&quot;) {" line49="                _idx = 7" line50="            } else {" line51="                _idx = 8" line52="            }" line53="        }" line54="    }" line55="    return _idx" line56="}" line57="function limitedMove (servo: number, angle: number) {" line58="    if (_newAngle &lt; 20) {" line59="        _newAngle = 20" line60="    } else if (_newAngle &gt; 160) {" line61="        _newAngle = 160" line62="    } else {" line63="        _newAngle = angle" line64="    }" line65="    if (servo == 1) {" line66="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo1, _newAngle)" line67="    } else if (servo == 2) {" line68="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo2, _newAngle)" line69="    } else if (servo == 3) {" line70="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo3, _newAngle)" line71="    } else if (servo == 4) {" line72="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo4, _newAngle)" line73="    } else if (servo == 5) {" line74="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo5, _newAngle)" line75="    } else if (servo == 6) {" line76="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo6, _newAngle)" line77="    } else if (servo == 7) {" line78="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo7, _newAngle)" line79="    } else if (servo == 8) {" line80="        Kitronik_Robotics_Board.servoWrite(Kitronik_Robotics_Board.Servos.Servo8, _newAngle)" line81="    }" line82="}" line83="let _idx = 0" line84="let _newAngle = 0" line85="let multiplier = 0" line86="let KNEEDOWN = 0" line87="let KNEEUP = 0" line88="let HIPBACKWARD = 0" line89="let HIPFORWARD = 0" line90="let positions: number[] = []" line91="let numSteps = 50" line92="HIPFORWARD = 20" line93="HIPBACKWARD = 40" line94="KNEEUP = 0" line95="KNEEDOWN = 30" line96="setNewPosition(&quot;front&quot;, &quot;left&quot;, &quot;hip&quot;, &quot;forward&quot;)" line97="basic.forever(function () {" line98="&#9;" line99="})" line100="}" numlines="101"></mutation></block></statement></block></xml>